#!./perl -Ilib -w

# This file should really be extracted from a .PL file

use strict;
use Data::Dumper;$Data::Dumper::Indent=1;
use Getopt::Long;    # for command-line parsing
use Pod::Html::Installhtml;

my $self = Pod::Html::Installhtml->new();
my $opts = parse_command_line();
$self->process_options( $opts );
$self->cleanup_elements();
$self->split_on_head();
$self->split_on_item();
$self->basic_installation();
#unless ( @{$self->{splititem}} or @{$self->{splithead}} ) {
#    print STDERR "Exiting now; nothing to split\n";
#    exit 0;
#}

# now go through and create master indices for each pod we split
$self->create_all_indices();
$self->handle_all_splits();
exit 0;


=head1 NAME

installhtml - converts a collection of POD pages to HTML format.

=head1 SYNOPSIS

    installhtml  [--help] [--podpath=<name>:...:<name>] [--podroot=<name>]
         [--htmldir=<name>] [--htmlroot=<name>]  [--norecurse] [--recurse]
         [--splithead=<name>,...,<name>]   [--splititem=<name>,...,<name>]
         [--ignore=<name>,...,<name>]  [--verbose]

=head1 DESCRIPTION

I<installhtml> converts a collection of POD pages to a corresponding
collection of HTML pages.  This is primarily used to convert the pod
pages found in the perl distribution.

=head1 OPTIONS

=over 4

=item B<--help> help

Displays the usage.

=item B<--podroot> POD search path base directory

The base directory to search for all .pod and .pm files to be converted.
Default is current directory.

=item B<--podpath> POD search path

The list of directories to search for .pod and .pm files to be converted.
Default is 'podroot/.'.

=item B<--recurse> recurse on subdirectories

Whether or not to convert all .pm and .pod files found in subdirectories
too.  Default is to not recurse.

=item B<--htmldir> HTML destination directory

The base directory which all HTML files will be written to.  This should
be a path relative to the filesystem, not the resulting URL.

=item B<--htmlroot> URL base directory

The base directory which all resulting HTML files will be visible at in
a URL.  The default is '/'.

=item B<--splithead> POD files to split on =head directive

Comma-separated list of pod files to split by the =head directive.  The
.pod suffix is optional. These files should have names specified
relative to podroot.

=item B<--splititem> POD files to split on =item directive

Comma-separated list of all pod files to split by the =item directive.
The .pod suffix is optional.  I<installhtml> does not do the actual
split, rather it invokes I<splitpod> to do the dirty work.  As with
--splithead, these files should have names specified relative to podroot.

=item B<--splitpod> Directory containing the splitpod program

The directory containing the splitpod program. The default is 'podroot/pod'.

=item B<--ignore> files to be ignored

Comma-separated of files that shouldn't be installed, given relative
to podroot.

=item B<--verbose> verbose output

Self-explanatory.

=back

=head1 EXAMPLE

The following command-line is an example of the one we use to convert
perl documentation:

    ./installhtml --podpath=lib:ext:pod:vms   \
            --podroot=/usr/src/perl     \
            --htmldir=/perl/nmanual     \
            --htmlroot=/perl/nmanual    \
            --splithead=pod/perlipc     \
            --splititem=pod/perlfunc    \
            --recurse \
            --verbose

=head1 AUTHOR

Chris Hall E<lt>hallc@cs.colorado.eduE<gt>

=cut

sub parse_command_line {
    my %opts = ();
    usage("") unless @ARGV;
    
    # Overcome shell's p1,..,p8 limitation.  
    # See vms/descrip_mms.template -> descrip.mms for invocation.
    if ( $^O eq 'VMS' ) { @ARGV = split(/\s+/,$ARGV[0]); }

    my $result = GetOptions( \%opts, qw(
        help
        podpath=s
        podroot=s
        htmldir=s
        htmlroot=s
        ignore=s
        recurse!
        splithead=s
        splititem=s
        splitpod=s
        verbose
    ));
    usage("invalid parameters") unless $result;
    usage() if defined $opts{help};
    $opts{help} = "";                 # make -w shut up
    return \%opts;
}

sub usage {
    warn "$0: @_\n" if @_;
    my $usage =<<END_OF_USAGE;
Usage: $0 --help --podpath=<name>:...:<name> --podroot=<name>
         --htmldir=<name> --htmlroot=<name> --norecurse --recurse
         --splithead=<name>,...,<name> --splititem=<name>,...,<name>
         --ignore=<name>,...,<name> --verbose

    --help      - this message
    --podpath   - colon-separated list of directories containing .pod and
                  .pm files to be converted (. by default).
    --podroot   - filesystem base directory from which all relative paths in
                  podpath stem (default is .).
    --htmldir   - directory to store resulting html files in relative
                  to the filesystem (\$podroot/html by default).
    --htmlroot  - http-server base directory from which all relative paths
                  in podpath stem (default is /).
    --norecurse - don't recurse on those subdirectories listed in podpath.
                  (default behavior).
    --recurse   - recurse on those subdirectories listed in podpath
    --splithead - comma-separated list of .pod or .pm files to split.  will
                  split each file into several smaller files at every occurrence
                  of a pod =head[1-6] directive.
    --splititem - comma-separated list of .pod or .pm files to split using
                  splitpod.
    --splitpod  - directory where the program splitpod can be found
                  (\$podroot/pod by default).
    --ignore    - comma-separated list of files that shouldn't be installed.
    --verbose   - self-explanatory.

END_OF_USAGE
    die $usage;
}

__END__
print STDERR Dumper $parsed_args;
